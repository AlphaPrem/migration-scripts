import { PrismaClient } from "@prisma/client";
import { appendFileSync, writeFileSync } from "fs";
import { barcodes } from "../barcodes"; // Import the static list of barcodes

const logFilePath = "./inventory/match_log.txt";

const prisma = new PrismaClient();

// Example static list of barcodes
// const barcodes = [
//   '414791',
//   '372423',
//   '372385',
//   '372378',
//   '372376',
//   '372360',
//   '372337',
//   '371760',
//   '371758',
//   '371679',
//   '371639',
//   '371625',
//   '371617',
//   '371614',
//   '371610',
//   '371609',
//   '371607',
//   '371599',
//   '371592',
//   '371588',
//   '371575',
//   '371559',
//   '371547',
//   '371534',
//   '371441',
//   '371438',
//   '371399',
//   '371382',
//   '371381',
//   '371374',
//   '371372',
//   '371340',
//   '371338',
//   '371335',
//   '371333',
//   '371332',
//   '371331',
//   '371329',
//   '371327',
//   '371322',
//   '371318',
//   '371303',
//   '371293',
//   '371292',
//   '371291',
//   '371290',
//   '371289',
//   '371288',
//   '371287',
//   '371286',
//   '371279',
//   '371276',
//   '371275',
//   '371274',
//   '371273',
//   '371267',
//   '371265',
//   '371264',
//   '371263',
//   '371257',
//   '371249',
//   '371247',
//   '371244',
//   '371242',
//   '371241',
//   '371236',
//   '371234',
//   '371232',
//   '371231',
//   '371226',
//   '371224',
//   '371222',
//   '371163',
//   '371141',
//   '371113',
//   '370365',
//   '370324',
//   '370314',
//   '370312',
//   '370304',
//   '370303',
//   '370298',
//   '370286',
//   '370262',
//   '370254',
//   '370253',
//   '370251',
//   '370249',
//   '370248',
//   '370247',
//   '370245',
//   '370244',
//   '370243',
//   '370242',
//   '370239',
//   '370237',
//   '370236',
//   '370235',
//   '370234',
//   '370233',
//   '370229',
//   '370228',
//   '370226',
//   '370225',
//   '370023',
//   '370002',
//   '369999',
//   '369988',
//   '369987',
//   '369986',
//   '369981',
//   '363904',
//   '363898',
//   '363885',
//   '363882',
//   '363881',
//   '363871',
//   '363870',
//   '363863',
//   '363854',
//   '363851',
//   '363841',
//   '363834',
//   '363832',
//   '363820',
//   '363737',
//   '363725',
//   '363723',
//   '363701',
//   '363697',
//   '363675',
//   '363665',
//   '363645',
//   '363639',
//   '363632',
//   '363625',
//   '363614',
//   '363608',
//   '363605',
//   '363602',
//   '363591',
//   '363581',
//   '363575',
//   '363574',
//   '363568',
//   '363563',
//   '363562',
//   '363558',
//   '363555',
//   '363545',
//   '363543',
//   '363529',
//   '363526',
//   '363521',
//   '363516',
//   '363515',
//   '363509',
//   '363508',
//   '363503',
//   '363498',
//   '363494',
//   '363492',
//   '363485',
//   '363477',
//   '363475',
//   '363468',
//   '363465',
//   '363433',
//   '363427',
//   '363382',
//   '363367',
//   '363324',
//   '363284',
//   '363110',
//   '362114',
//   '362107',
//   '362103',
//   '362086',
//   '362085',
//   '362072',
//   '362071',
//   '362068',
//   '362064',
//   '362045',
//   '362038',
//   '362023',
//   '360972',
//   '360965',
//   '360960',
//   '360957',
//   '360854',
//   '360845',
//   '360841',
//   '360832',
//   '360695',
//   '360689',
//   '360675',
//   '360663',
//   '360648',
//   '251898',
//   '251896',
//   '251887',
//   '251880',
//   '251861',
//   '251860',
//   '251849',
//   '251834',
//   '251830',
//   '251823',
//   '251820',
//   '251819',
//   '251818',
//   '251817',
//   '251803',
//   '251797',
//   '251796',
//   '251793',
//   '251774',
//   '251762',
//   '251757',
//   '251751',
//   '251745',
//   '251741',
//   '251732',
//   '251730',
//   '251726',
//   '251721',
//   '251712',
//   '251709',
//   '251703',
//   '251674',
//   '251672',
//   '251669',
//   '251655',
//   '251641',
//   '251582',
//   '251581',
//   '251571',
//   '251562',
//   '251559',
//   '251547',
//   '251222',
//   '251219',
//   '251209',
//   '251200',
//   '251177',
//   '251166',
//   '251165',
//   '251126',
//   '251122',
//   '251117',
//   '251114',
//   '251112',
//   '251111',
//   '251106',
//   '251105',
//   '251090',
//   '251085',
//   '251080',
//   '251074',
//   '251068',
//   '251065',
//   '251031',
//   '251029',
//   '251028',
//   '251025',
//   '251009',
//   '251008',
//   '251005',
//   '250998',
//   '250992',
//   '249856',
//   '249417',
//   '249398',
//   '249384',
//   '249383',
//   '249380',
//   '248665',
//   '248027',
//   '247744',
//   '246882',
//   '246881',
//   '246875',
//   '246870',
//   '246864',
//   '246860',
//   '246854',
//   '246852',
//   '246847',
//   '246835',
//   '246827',
//   '246813',
//   '246807',
//   '246804',
//   '246803',
//   '246785',
//   '246784',
//   '246780',
//   '246769',
//   '246761',
//   '246759',
//   '246757',
//   '246746',
//   '246740',
//   '246737',
//   '246727',
//   '246726',
//   '246724',
//   '246723',
//   '246713',
//   '246712',
//   '246709',
//   '246703',
//   '246695',
//   '246691',
//   '246686',
//   '246682',
//   '246679',
//   '246671',
//   '246668',
//   '246652',
//   '246645',
//   '246642',
//   '246632',
//   '246618',
//   '246609',
//   '246606',
//   '246596',
//   '246587',
//   '246576',
//   '246411',
//   '246364',
//   '246346',
//   '246337',
//   '246336',
//   '246329',
//   '246325',
//   '246318',
//   '246305',
//   '246304',
//   '246294',
//   '246287',
//   '246274',
//   '246270',
//   '246266',
//   '246265',
//   '246263',
//   '246259',
//   '246255',
//   '246254',
//   '246253',
//   '246246',
//   '246245',
//   '246241',
//   '246233',
//   '246232',
//   '246231',
//   '246226',
//   '246224',
//   '246211',
//   '246208',
//   '246206',
//   '246173',
//   '246142',
//   '245723',
//   '245490',
//   '245476',
//   '245461',
//   '245043',
//   '244491',
//   '244464',
//   '244461',
//   '244401',
//   '244390',
//   '244350',
//   '39691',
//   '39666',
//   '39646',
//   '39627',
//   '39535',
//   '39437',
//   '39432',
//   '39431',
//   '39404',
//   '39399',
//   '39392',
//   '39370',
//   '39342',
//   '39339',
//   '39323',
//   '39294',
//   '39289',
//   '39288',
//   '39283',
//   '39274',
//   '39252',
//   '39244',
//   '39242',
//   '39210',
//   '39101',
//   '39088',
//   '39020',
//   '38986',
//   '38985',
// ]

async function main() {
  const matchedBarcodes: string[] = [];
  const notMatchedBarcodes: string[] = [];

  for (const code of barcodes) {
    const hit = await prisma.inventory.findUnique({
      where: {
        barcode: code,
      },
      select: { barcode: true },
    });

    if (hit) {
      matchedBarcodes.push(hit.barcode);
      const logMsg = `✅ ${code} → match #${matchedBarcodes.length}`;
      console.log(logMsg);
      appendFileSync(logFilePath, logMsg + "\n");
    } else {
      notMatchedBarcodes.push(code);
      console.log(`❌ ${code} → no match`);
    }
  }

  writeFileSync(
    "./inventory/existing_barcodes.json",
    JSON.stringify(matchedBarcodes, null, 2)
  );
  writeFileSync(
    "./inventory/non_existing_barcodes.json",
    JSON.stringify(notMatchedBarcodes, null, 2)
  );
  console.log(
    `📄 existing_barcodes.json written with ${matchedBarcodes.length} matches, not matching barcodes: ${notMatchedBarcodes.length}`
  );
}

main()
  .catch((err) => {
    console.error("❌ Error:", err);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
